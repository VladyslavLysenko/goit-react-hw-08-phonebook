{"version":3,"file":"static/js/132.7bc23af5.chunk.js","mappings":"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","sources":["components/redux/contacts/selectors.js","components/Contacts/Contacts.styled.js","components/Contacts/ContactItem.js","components/Form/Form.styled.js","components/Contacts/ContactsList.js","components/Form/Form.js","components/Section/Section.styled.js","components/Section/Section.js","components/Filter/Filter.js","GlobalStyle.js","components/pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filters;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  // Массив входных селекторов\n  [getFilter, getContacts],\n  // Функция преобразователь\n  (filter, items) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n  font: normal 20px 'Bitter', serif;\n  color: #2a88ad;\n  margin-bottom: 5px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: flex-end;\n  gap: 10px;\n`;\n\nexport const Item = styled.li``;\n\nexport const Wrapper = styled.div`\n  ${'' /* display: 'flex'; */}\n`;\n\nexport const ContactBtn = styled.button`\n  background: #2a88ad;\n  padding: 8px 20px 8px 20px;\n  border-radius: 5px;\n  -webkit-0border-radius: 5px;\n  -moz-border-radius: 5px;\n  color: #fff;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n  font: normal 30px 'Bitter', serif;\n  -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  border: 1px solid #257c9e;\n  font-size: 8px;\n  margin-left: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContactBtn, Wrapper } from './Contacts.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'components/redux/contacts/operations';\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Wrapper>\n        <span>\n          {name}:{number}\n        </span>\n        <ContactBtn type=\"button\" onClick={handleDelete}>\n          Delete\n        </ContactBtn>\n      </Wrapper>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const CommonBox = styled.div`\n  width: 450px;\n  padding: 30px;\n  margin: 40px auto;\n  background: #fff;\n  border-radius: 10px;\n  -webkit-border-radius: 10px;\n  -moz-border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.13);\n  -moz-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.13);\n  -webkit-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.13);\n`;\n\nexport const InnerWrap = styled.div`\n  padding: 5px;\n  background: #f8f8f8;\n  border-radius: 6px;\n  margin-bottom: 15px;\n`;\n\nexport const SectionForm = styled.section`\n  font: normal 20px 'Bitter', serif;\n  color: #2a88ad;\n  margin-bottom: 5px;\n`;\n\nexport const CommonButton = styled.button`\n  background: #2a88ad;\n  padding: 8px 20px 8px 20px;\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  color: #fff;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n  font: normal 30px 'Bitter', serif;\n  -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  border: 1px solid #257c9e;\n  font-size: 15px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  width: 100%;\n  padding: 8px;\n  border-radius: 6px;\n  -webkit-border-radius: 6px;\n  -moz-border-radius: 6px;\n  border: 2px solid #fff;\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\n  -moz-box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\n  -webkit-box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.33);\n`;\n","import React from 'react';\nimport { ContactItem } from './ContactItem';\nimport { InnerWrap } from '../Form/Form.styled';\nimport { ContactList, Item } from './Contacts.styled';\nimport { useSelector } from 'react-redux';\nimport { getVisibleContacts } from 'components/redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <InnerWrap>\n      <ContactList>\n        {visibleContacts.map(item => (\n          <Item key={item.id}>\n            <ContactItem contact={item} />\n          </Item>\n        ))}\n      </ContactList>\n    </InnerWrap>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'components/redux/contacts/selectors';\nimport { addContact } from 'components/redux/contacts/operations';\nimport { InnerWrap, SectionForm, CommonButton, Input } from './Form.styled';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  let contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handlerSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const saved = saveContact({ name, number });\n    if (saved) {\n      form.reset();\n    }\n  };\n\n  const saveContact = item => {\n    const checkName = contacts\n\n      .map(item => item.name.toLowerCase())\n      .some(item => item === name.toLowerCase());\n\n    if (checkName) {\n      window.alert(`This contact ${name} already excist `);\n      return false;\n    } else {\n      console.log(name, number);\n      dispatch(addContact({ name, number }));\n      return true;\n    }\n  };\n\n  return (\n    <form onSubmit={handlerSubmit}>\n      <SectionForm>\n        <InnerWrap>\n          <label>\n            Name\n            <Input\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Add your name...\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n        </InnerWrap>\n      </SectionForm>\n      <SectionForm>\n        <InnerWrap>\n          <label>\n            Number\n            <Input\n              onChange={handleChange}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Add your number...\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n        </InnerWrap>\n      </SectionForm>\n      <CommonButton type=\"submit\">Add contact</CommonButton>\n      <div />\n    </form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  background: #2a88ad;\n  padding: 20px 30px 15px 30px;\n  margin: -30px -30px 30px -30px;\n  border-radius: 10px 10px 0 0;\n  -webkit-border-radius: 10px 10px 0 0;\n  -moz-border-radius: 10px 10px 0 0;\n  color: #fff;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n  font: normal 30px 'Bitter', serif;\n  -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  border: 1px solid #257c9e;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <Title>{title}</Title>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { Input, InnerWrap, SectionForm } from 'components/Form/Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'components/redux/contacts/filterSlice';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = value => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <InnerWrap>\n      <SectionForm>\n        <label>\n          Find contacts by Name\n          <Input\n            name=\"filter\"\n            onChange={evt => onChange(evt.currentTarget.value)}\n            type=\"text\"\n            placeholder=\"Search contact...\"\n          />\n        </label>\n      </SectionForm>\n    </InnerWrap>\n  );\n};\n\nexport default Filter;\n","import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\nexport const GlobalStyle = createGlobalStyle`\n p,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n}\nul {\n  margin: 0;\n  padding-left: 0;\n  list-style: none;\n}\nbutton {\n  cursor: pointer;\n}\n.link {\n  text-decoration: none;\n}\nimg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { getIsLoading } from '../redux/contacts/selectors';\nimport { ContactsList } from 'components/Contacts/ContactsList';\nimport ContactForm from '../Form/Form';\nimport { Section } from '../Section/Section';\nimport Filter from '../Filter/Filter';\nimport { GlobalStyle } from 'GlobalStyle';\nimport { CommonBox } from '../Form/Form.styled';\nimport { fetchContacts } from 'components/redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <CommonBox>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n      </CommonBox>\n      <CommonBox>\n        <Section title=\"Contacts\">\n          <Filter />\n          {isLoading && <b>Request in progress...</b>}\n          <ContactsList />\n        </Section>\n      </CommonBox>\n      <GlobalStyle />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getVisibleContacts","createSelector","filters","filter","normalizedFilter","toLowerCase","contact","name","includes","ContactList","styled","Item","Wrapper","ContactBtn","ContactItem","id","number","dispatch","useDispatch","type","onClick","deleteContact","CommonBox","InnerWrap","SectionForm","CommonButton","Input","ContactsList","visibleContacts","useSelector","map","item","ContactForm","useState","setName","setNumber","handleChange","event","target","value","saveContact","checkName","some","window","alert","console","log","addContact","onSubmit","evt","preventDefault","form","currentTarget","reset","onChange","placeholder","pattern","title","required","Title","Section","children","setFilter","GlobalStyle","createGlobalStyle","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}